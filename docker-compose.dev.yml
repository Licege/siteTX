version: '3'
services:
  db:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./db/pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 5315
      POSTGRES_DB: trixolma
      PGDATA: /var/lib/postgresql/data
    restart: always

  backend_image: &default
    container_name: backend_trixolma
    build:
      context: ./server
      dockerfile: Dockerfile
    command: bash
    env_file:
      - ./server/.env
    links:
      - db

  api_service:
    container_name: api_service
    <<: *default
    command: npm run start
    ports:
      - "9090:9090"
    links:
      - db
    restart: always
    env_file:
      - ./server/.env
    environment:
      - NODE_ENV=development
      - DEFAULT_EXECUTION_MODE=service

  api_auth:
    container_name: api_auth
    <<: *default
    command: npm run start
    ports:
      - "9092:9092"
    links:
      - db
    restart: always
    env_file:
      - ./server/.env
    environment:
      - NODE_ENV=development
      - DEFAULT_EXECUTION_MODE=authorization

#  migration:
#    image: sitetx_api_service
#    command: ["./wait-for-it/wait-for-it.sh", "api_service:9090", "--", "sequelize", "db:migrate"]
#    environment:
#      - DB_NAME=trixolma
#    links:
#      - api_service
#      - api_auth

  site:
    container_name: site
    build:
      context: ./site
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - "./site:/app"
    env_file:
      - ./site/.env
    environment:
      - NODE_ENV=development
    links:
      - api_auth
      - api_service
    working_dir: /app
#    command: sh -c "sleep 3600;"
    command: sh -c "cd /app; npm run start"

#  dashboard:
#    container_name: dashboard
#    image: node:16.1.0
#    ports:
#      - "3001:3001"
#    volumes:
#      - "./dashboard:/app"
#    env_file:
#      - ./dashboard/.env
#    environment:
#      - NODE_ENV=development
#    links:
#      - api_auth
#      - api_service
#    working_dir: /app
#    command: sh -c "cd /app; npm install; npm run start"

  dashboard:
    container_name: dashboard
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - "./dashboard:/app"
    env_file:
      - ./dashboard/.env
    environment:
      - NODE_ENV=development
    links:
      - api_auth
      - api_service
    working_dir: /app
    command: sh -c "cd /app; npm run start"

  nginx:
    container_name: nginx
    build: ./nginx/dev
#    volumes:
#      - ./dashboard/build:/var/www/app/dashboard
#      - ./site/build/:/var/www/app/site
    restart: always
    ports:
      - 80:80
      - 443:443
    links:
      - api_auth
      - api_service
      - site
      - dashboard
